#!/bin/bash

###
#
# Script to run your Spincast based application as
# a service, on Linux.
#
# Based on Vert.x's init.d script :
# http://vertx.io/blog/vert-x-3-init-d-script/
# Credits to the original author! : 
# https://github.com/cescoffier
#
# [Configuration] : 
# Update the "CONFIGURATION" section below.
# Scan for the "Spincast" instances in this document if
# you want to use your application name instead.
#
# [Installation (CentOS)] :
# copy file to /etc/init.d
# chmod +x /etc/init.d/my-spincast-application
# chkconfig --add /etc/init.d/my-spincast-application
# chkconfig my-spincast-application on
# 
# [Installation (Ubuntu)] :
# copy file to /etc/init.d
# chmod +x /etc/init.d/my-spincast-application
# update-rc.d my-spincast-application defaults
#
# [Usage (as root)] :
# service my-spincast-application start
# service my-spincast-application stop
# service my-spincast-application status
#
# chkconfig: 345 20 80
# description: Spincast application service script
# processname: java
#
###

#==========================================
# START CONFIGURATION
#==========================================
# The directory in which your application is installed
APPLICATION_DIR="/[PATH_TO_YOUR_APP_ROOT_DIR]"

# The fat jar containing your application
APPLICATION_JAR="[YOUR_APP_JAR_NAME].jar"

# The application argument
APPLICATION_ARGS=""

# Spincast options and system properties (-Dfoo=bar). 
SPINCAST_OPTS=""

# The Java command to use to launch the application
JAVA=[PATH_TO_JDK]/bin/java

#==========================================
# END CONFIGURATION
#==========================================

# ***********************************************
OUT_FILE="${APPLICATION_DIR}"/logs/service_out.log
RUNNING_PID="${APPLICATION_DIR}"/RUNNING_PID
# ***********************************************

# colors
red='\e[0;31m'
green='\e[0;32m'
yellow='\e[0;33m'
reset='\e[0m'

echoRed() { echo -e "${red}$1${reset}"; }
echoGreen() { echo -e "${green}$1${reset}"; }
echoYellow() { echo -e "${yellow}$1${reset}"; }

# Check whether the application is running.
# The check is pretty simple: open a running pid file and check that the process
# is alive.
isrunning() {
  # Check for running app
  if [ -f "$RUNNING_PID" ]; then
    proc=$(cat $RUNNING_PID);
    if /bin/ps --pid $proc 1>&2 >/dev/null;
    then
      return 0
    fi
  fi
  return 1
}

start() {
  if isrunning; then
    echoYellow "The Spincast application is already running"
    return 0
  fi

  pushd $APPLICATION_DIR > /dev/null
  nohup $JAVA $SPINCAST_OPTS -jar $APPLICATION_JAR $APPLICATION_ARGS > $OUT_FILE 2>&1 &
  echo $! > ${RUNNING_PID}
  popd > /dev/null

  if isrunning; then
    echoGreen "Spincast Application started"
    exit 0
  else
    echoRed "The Spincast Application has not started - check log"
    exit 3
  fi
}

restart() {
  echo "Restarting Spincast Application"
  stop
  start
}

stop() {
  echoYellow "Stopping Spincast Application"
  if isrunning; then
    kill `cat $RUNNING_PID`
    rm $RUNNING_PID
  fi
}

status() {
  if isrunning; then
    echoGreen "Spincast Application is running"
  else
    echoRed "Spincast Application is either stopped or inaccessible"
  fi
}

case "$1" in
start)
    start
;;

status)
   status
   exit 0
;;

stop)
    if isrunning; then
	stop
	exit 0
    else
	echoRed "Spincast Application not running"
	exit 3
    fi
;;

restart)
    stop
    start
;;

*)
    echo "Usage: $0 {status|start|stop|restart}"
    exit 1
esac

